{"ast":null,"code":"//We will create our theme context in our ThemeContext.js file.\nimport React from \"react\"; //To create a context, we use React.createContext which creates a context object. \n//You can pass in anything as an argument to React.createContext. \n//In this case, we are going to pass in a string which is the current theme mode. So now our current theme mode is the “light” theme mode\n//const ThemeContext = React.createContext(\"light\"); \n//making new context for toggling theme fuctionality\n\nconst ThemeContext = React.createContext[(\"light\", () => {})]; //similar to useState, where 1st arg stores default value and 2nd arg is a arow func that updates the default value\n//We passed an array to the React.createContext function. \n//The first element in the array is the current theme mode and the second element is the function that would be used to update the theme. \n//As I said, this just resembles the result of a useState hook but it is not exactly the result of a useState hook.\n\nexport default ThemeContext; //part 1\n//Creating the context provider in App.js\n//part2\n//moving to App.js to make useState for toggle theme functionality","map":{"version":3,"sources":["/home/umar/To be backuped/bootcampwithmamoon/bootcamp/context-api/src/ThemeContext.js"],"names":["React","ThemeContext","createContext"],"mappings":"AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AAEA;AAEA;;AAEA,MAAMC,YAAY,GAAGD,KAAK,CAACE,aAAN,EAAoB,SAAS,MAAK,CAAE,CAApC,EAArB,C,CAA2D;AAE3D;AACA;AACA;;AAEA,eAAeD,YAAf,C,CAEA;AACA;AAEA;AACA","sourcesContent":["//We will create our theme context in our ThemeContext.js file.\n\nimport React from \"react\";\n\n//To create a context, we use React.createContext which creates a context object. \n//You can pass in anything as an argument to React.createContext. \n//In this case, we are going to pass in a string which is the current theme mode. So now our current theme mode is the “light” theme mode\n\n//const ThemeContext = React.createContext(\"light\"); \n\n//making new context for toggling theme fuctionality\n\nconst ThemeContext = React.createContext[\"light\", () =>{}] //similar to useState, where 1st arg stores default value and 2nd arg is a arow func that updates the default value\n\n//We passed an array to the React.createContext function. \n//The first element in the array is the current theme mode and the second element is the function that would be used to update the theme. \n//As I said, this just resembles the result of a useState hook but it is not exactly the result of a useState hook.\n\nexport default ThemeContext;\n\n//part 1\n//Creating the context provider in App.js\n\n//part2\n//moving to App.js to make useState for toggle theme functionality"]},"metadata":{},"sourceType":"module"}